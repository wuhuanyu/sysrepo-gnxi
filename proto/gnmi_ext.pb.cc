// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gnmi_ext.proto

#include "gnmi_ext.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_gnmi_5fext_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gnmi_5fext_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RegisteredExtension;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gnmi_5fext_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Role;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gnmi_5fext_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Uint128;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gnmi_5fext_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_MasterArbitration;
}  // namespace protobuf_gnmi_5fext_2eproto
namespace gnmi_ext {
class ExtensionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Extension>
      _instance;
  const ::gnmi_ext::RegisteredExtension* registered_ext_;
  const ::gnmi_ext::MasterArbitration* master_arbitration_;
} _Extension_default_instance_;
class RegisteredExtensionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegisteredExtension>
      _instance;
} _RegisteredExtension_default_instance_;
class MasterArbitrationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MasterArbitration>
      _instance;
} _MasterArbitration_default_instance_;
class Uint128DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Uint128>
      _instance;
} _Uint128_default_instance_;
class RoleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Role>
      _instance;
} _Role_default_instance_;
}  // namespace gnmi_ext
namespace protobuf_gnmi_5fext_2eproto {
static void InitDefaultsExtension() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gnmi_ext::_Extension_default_instance_;
    new (ptr) ::gnmi_ext::Extension();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gnmi_ext::Extension::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Extension =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsExtension}, {
      &protobuf_gnmi_5fext_2eproto::scc_info_RegisteredExtension.base,
      &protobuf_gnmi_5fext_2eproto::scc_info_MasterArbitration.base,}};

static void InitDefaultsRegisteredExtension() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gnmi_ext::_RegisteredExtension_default_instance_;
    new (ptr) ::gnmi_ext::RegisteredExtension();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gnmi_ext::RegisteredExtension::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RegisteredExtension =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRegisteredExtension}, {}};

static void InitDefaultsMasterArbitration() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gnmi_ext::_MasterArbitration_default_instance_;
    new (ptr) ::gnmi_ext::MasterArbitration();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gnmi_ext::MasterArbitration::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_MasterArbitration =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMasterArbitration}, {
      &protobuf_gnmi_5fext_2eproto::scc_info_Role.base,
      &protobuf_gnmi_5fext_2eproto::scc_info_Uint128.base,}};

static void InitDefaultsUint128() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gnmi_ext::_Uint128_default_instance_;
    new (ptr) ::gnmi_ext::Uint128();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gnmi_ext::Uint128::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Uint128 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUint128}, {}};

static void InitDefaultsRole() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gnmi_ext::_Role_default_instance_;
    new (ptr) ::gnmi_ext::Role();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gnmi_ext::Role::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Role =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRole}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Extension.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RegisteredExtension.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MasterArbitration.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Uint128.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Role.base);
}

::google::protobuf::Metadata file_level_metadata[5];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi_ext::Extension, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi_ext::Extension, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::gnmi_ext::ExtensionDefaultTypeInternal, registered_ext_),
  offsetof(::gnmi_ext::ExtensionDefaultTypeInternal, master_arbitration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi_ext::Extension, ext_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi_ext::RegisteredExtension, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi_ext::RegisteredExtension, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi_ext::RegisteredExtension, msg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi_ext::MasterArbitration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi_ext::MasterArbitration, role_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi_ext::MasterArbitration, election_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi_ext::Uint128, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi_ext::Uint128, high_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi_ext::Uint128, low_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi_ext::Role, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi_ext::Role, id_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::gnmi_ext::Extension)},
  { 8, -1, sizeof(::gnmi_ext::RegisteredExtension)},
  { 15, -1, sizeof(::gnmi_ext::MasterArbitration)},
  { 22, -1, sizeof(::gnmi_ext::Uint128)},
  { 29, -1, sizeof(::gnmi_ext::Role)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::gnmi_ext::_Extension_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gnmi_ext::_RegisteredExtension_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gnmi_ext::_MasterArbitration_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gnmi_ext::_Uint128_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gnmi_ext::_Role_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "gnmi_ext.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016gnmi_ext.proto\022\010gnmi_ext\"\206\001\n\tExtension"
      "\0227\n\016registered_ext\030\001 \001(\0132\035.gnmi_ext.Regi"
      "steredExtensionH\000\0229\n\022master_arbitration\030"
      "\002 \001(\0132\033.gnmi_ext.MasterArbitrationH\000B\005\n\003"
      "ext\"E\n\023RegisteredExtension\022!\n\002id\030\001 \001(\0162\025"
      ".gnmi_ext.ExtensionID\022\013\n\003msg\030\002 \001(\014\"Y\n\021Ma"
      "sterArbitration\022\034\n\004role\030\001 \001(\0132\016.gnmi_ext"
      ".Role\022&\n\013election_id\030\002 \001(\0132\021.gnmi_ext.Ui"
      "nt128\"$\n\007Uint128\022\014\n\004high\030\001 \001(\004\022\013\n\003low\030\002 "
      "\001(\004\"\022\n\004Role\022\n\n\002id\030\001 \001(\t*3\n\013ExtensionID\022\r"
      "\n\tEID_UNSET\020\000\022\025\n\020EID_EXPERIMENTAL\020\347\007b\006pr"
      "oto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 444);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "gnmi_ext.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_gnmi_5fext_2eproto
namespace gnmi_ext {
const ::google::protobuf::EnumDescriptor* ExtensionID_descriptor() {
  protobuf_gnmi_5fext_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_5fext_2eproto::file_level_enum_descriptors[0];
}
bool ExtensionID_IsValid(int value) {
  switch (value) {
    case 0:
    case 999:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Extension::InitAsDefaultInstance() {
  ::gnmi_ext::_Extension_default_instance_.registered_ext_ = const_cast< ::gnmi_ext::RegisteredExtension*>(
      ::gnmi_ext::RegisteredExtension::internal_default_instance());
  ::gnmi_ext::_Extension_default_instance_.master_arbitration_ = const_cast< ::gnmi_ext::MasterArbitration*>(
      ::gnmi_ext::MasterArbitration::internal_default_instance());
}
void Extension::set_allocated_registered_ext(::gnmi_ext::RegisteredExtension* registered_ext) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_ext();
  if (registered_ext) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      registered_ext = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, registered_ext, submessage_arena);
    }
    set_has_registered_ext();
    ext_.registered_ext_ = registered_ext;
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi_ext.Extension.registered_ext)
}
void Extension::set_allocated_master_arbitration(::gnmi_ext::MasterArbitration* master_arbitration) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_ext();
  if (master_arbitration) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      master_arbitration = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, master_arbitration, submessage_arena);
    }
    set_has_master_arbitration();
    ext_.master_arbitration_ = master_arbitration;
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi_ext.Extension.master_arbitration)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Extension::kRegisteredExtFieldNumber;
const int Extension::kMasterArbitrationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Extension::Extension()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_gnmi_5fext_2eproto::scc_info_Extension.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi_ext.Extension)
}
Extension::Extension(const Extension& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_ext();
  switch (from.ext_case()) {
    case kRegisteredExt: {
      mutable_registered_ext()->::gnmi_ext::RegisteredExtension::MergeFrom(from.registered_ext());
      break;
    }
    case kMasterArbitration: {
      mutable_master_arbitration()->::gnmi_ext::MasterArbitration::MergeFrom(from.master_arbitration());
      break;
    }
    case EXT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:gnmi_ext.Extension)
}

void Extension::SharedCtor() {
  clear_has_ext();
}

Extension::~Extension() {
  // @@protoc_insertion_point(destructor:gnmi_ext.Extension)
  SharedDtor();
}

void Extension::SharedDtor() {
  if (has_ext()) {
    clear_ext();
  }
}

void Extension::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Extension::descriptor() {
  ::protobuf_gnmi_5fext_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_5fext_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Extension& Extension::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_gnmi_5fext_2eproto::scc_info_Extension.base);
  return *internal_default_instance();
}


void Extension::clear_ext() {
// @@protoc_insertion_point(one_of_clear_start:gnmi_ext.Extension)
  switch (ext_case()) {
    case kRegisteredExt: {
      delete ext_.registered_ext_;
      break;
    }
    case kMasterArbitration: {
      delete ext_.master_arbitration_;
      break;
    }
    case EXT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = EXT_NOT_SET;
}


void Extension::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi_ext.Extension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_ext();
  _internal_metadata_.Clear();
}

bool Extension::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi_ext.Extension)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .gnmi_ext.RegisteredExtension registered_ext = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_registered_ext()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gnmi_ext.MasterArbitration master_arbitration = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_master_arbitration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi_ext.Extension)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi_ext.Extension)
  return false;
#undef DO_
}

void Extension::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi_ext.Extension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gnmi_ext.RegisteredExtension registered_ext = 1;
  if (has_registered_ext()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_registered_ext(), output);
  }

  // .gnmi_ext.MasterArbitration master_arbitration = 2;
  if (has_master_arbitration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_master_arbitration(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gnmi_ext.Extension)
}

::google::protobuf::uint8* Extension::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gnmi_ext.Extension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gnmi_ext.RegisteredExtension registered_ext = 1;
  if (has_registered_ext()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_registered_ext(), deterministic, target);
  }

  // .gnmi_ext.MasterArbitration master_arbitration = 2;
  if (has_master_arbitration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_master_arbitration(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gnmi_ext.Extension)
  return target;
}

size_t Extension::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi_ext.Extension)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (ext_case()) {
    // .gnmi_ext.RegisteredExtension registered_ext = 1;
    case kRegisteredExt: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ext_.registered_ext_);
      break;
    }
    // .gnmi_ext.MasterArbitration master_arbitration = 2;
    case kMasterArbitration: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ext_.master_arbitration_);
      break;
    }
    case EXT_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Extension::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi_ext.Extension)
  GOOGLE_DCHECK_NE(&from, this);
  const Extension* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Extension>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi_ext.Extension)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi_ext.Extension)
    MergeFrom(*source);
  }
}

void Extension::MergeFrom(const Extension& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi_ext.Extension)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.ext_case()) {
    case kRegisteredExt: {
      mutable_registered_ext()->::gnmi_ext::RegisteredExtension::MergeFrom(from.registered_ext());
      break;
    }
    case kMasterArbitration: {
      mutable_master_arbitration()->::gnmi_ext::MasterArbitration::MergeFrom(from.master_arbitration());
      break;
    }
    case EXT_NOT_SET: {
      break;
    }
  }
}

void Extension::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi_ext.Extension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Extension::CopyFrom(const Extension& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi_ext.Extension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Extension::IsInitialized() const {
  return true;
}

void Extension::Swap(Extension* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Extension::InternalSwap(Extension* other) {
  using std::swap;
  swap(ext_, other->ext_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Extension::GetMetadata() const {
  protobuf_gnmi_5fext_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_5fext_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RegisteredExtension::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegisteredExtension::kIdFieldNumber;
const int RegisteredExtension::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegisteredExtension::RegisteredExtension()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_gnmi_5fext_2eproto::scc_info_RegisteredExtension.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi_ext.RegisteredExtension)
}
RegisteredExtension::RegisteredExtension(const RegisteredExtension& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:gnmi_ext.RegisteredExtension)
}

void RegisteredExtension::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
}

RegisteredExtension::~RegisteredExtension() {
  // @@protoc_insertion_point(destructor:gnmi_ext.RegisteredExtension)
  SharedDtor();
}

void RegisteredExtension::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RegisteredExtension::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RegisteredExtension::descriptor() {
  ::protobuf_gnmi_5fext_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_5fext_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegisteredExtension& RegisteredExtension::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_gnmi_5fext_2eproto::scc_info_RegisteredExtension.base);
  return *internal_default_instance();
}


void RegisteredExtension::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi_ext.RegisteredExtension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
  _internal_metadata_.Clear();
}

bool RegisteredExtension::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi_ext.RegisteredExtension)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .gnmi_ext.ExtensionID id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_id(static_cast< ::gnmi_ext::ExtensionID >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi_ext.RegisteredExtension)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi_ext.RegisteredExtension)
  return false;
#undef DO_
}

void RegisteredExtension::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi_ext.RegisteredExtension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gnmi_ext.ExtensionID id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->id(), output);
  }

  // bytes msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->msg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gnmi_ext.RegisteredExtension)
}

::google::protobuf::uint8* RegisteredExtension::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gnmi_ext.RegisteredExtension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gnmi_ext.ExtensionID id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->id(), target);
  }

  // bytes msg = 2;
  if (this->msg().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->msg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gnmi_ext.RegisteredExtension)
  return target;
}

size_t RegisteredExtension::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi_ext.RegisteredExtension)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msg());
  }

  // .gnmi_ext.ExtensionID id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisteredExtension::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi_ext.RegisteredExtension)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisteredExtension* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegisteredExtension>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi_ext.RegisteredExtension)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi_ext.RegisteredExtension)
    MergeFrom(*source);
  }
}

void RegisteredExtension::MergeFrom(const RegisteredExtension& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi_ext.RegisteredExtension)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void RegisteredExtension::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi_ext.RegisteredExtension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisteredExtension::CopyFrom(const RegisteredExtension& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi_ext.RegisteredExtension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisteredExtension::IsInitialized() const {
  return true;
}

void RegisteredExtension::Swap(RegisteredExtension* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegisteredExtension::InternalSwap(RegisteredExtension* other) {
  using std::swap;
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RegisteredExtension::GetMetadata() const {
  protobuf_gnmi_5fext_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_5fext_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MasterArbitration::InitAsDefaultInstance() {
  ::gnmi_ext::_MasterArbitration_default_instance_._instance.get_mutable()->role_ = const_cast< ::gnmi_ext::Role*>(
      ::gnmi_ext::Role::internal_default_instance());
  ::gnmi_ext::_MasterArbitration_default_instance_._instance.get_mutable()->election_id_ = const_cast< ::gnmi_ext::Uint128*>(
      ::gnmi_ext::Uint128::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MasterArbitration::kRoleFieldNumber;
const int MasterArbitration::kElectionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MasterArbitration::MasterArbitration()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_gnmi_5fext_2eproto::scc_info_MasterArbitration.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi_ext.MasterArbitration)
}
MasterArbitration::MasterArbitration(const MasterArbitration& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_role()) {
    role_ = new ::gnmi_ext::Role(*from.role_);
  } else {
    role_ = NULL;
  }
  if (from.has_election_id()) {
    election_id_ = new ::gnmi_ext::Uint128(*from.election_id_);
  } else {
    election_id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:gnmi_ext.MasterArbitration)
}

void MasterArbitration::SharedCtor() {
  ::memset(&role_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&election_id_) -
      reinterpret_cast<char*>(&role_)) + sizeof(election_id_));
}

MasterArbitration::~MasterArbitration() {
  // @@protoc_insertion_point(destructor:gnmi_ext.MasterArbitration)
  SharedDtor();
}

void MasterArbitration::SharedDtor() {
  if (this != internal_default_instance()) delete role_;
  if (this != internal_default_instance()) delete election_id_;
}

void MasterArbitration::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MasterArbitration::descriptor() {
  ::protobuf_gnmi_5fext_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_5fext_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MasterArbitration& MasterArbitration::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_gnmi_5fext_2eproto::scc_info_MasterArbitration.base);
  return *internal_default_instance();
}


void MasterArbitration::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi_ext.MasterArbitration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && role_ != NULL) {
    delete role_;
  }
  role_ = NULL;
  if (GetArenaNoVirtual() == NULL && election_id_ != NULL) {
    delete election_id_;
  }
  election_id_ = NULL;
  _internal_metadata_.Clear();
}

bool MasterArbitration::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi_ext.MasterArbitration)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .gnmi_ext.Role role = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_role()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gnmi_ext.Uint128 election_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_election_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi_ext.MasterArbitration)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi_ext.MasterArbitration)
  return false;
#undef DO_
}

void MasterArbitration::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi_ext.MasterArbitration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gnmi_ext.Role role = 1;
  if (this->has_role()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_role(), output);
  }

  // .gnmi_ext.Uint128 election_id = 2;
  if (this->has_election_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_election_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gnmi_ext.MasterArbitration)
}

::google::protobuf::uint8* MasterArbitration::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gnmi_ext.MasterArbitration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gnmi_ext.Role role = 1;
  if (this->has_role()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_role(), deterministic, target);
  }

  // .gnmi_ext.Uint128 election_id = 2;
  if (this->has_election_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_election_id(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gnmi_ext.MasterArbitration)
  return target;
}

size_t MasterArbitration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi_ext.MasterArbitration)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .gnmi_ext.Role role = 1;
  if (this->has_role()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *role_);
  }

  // .gnmi_ext.Uint128 election_id = 2;
  if (this->has_election_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *election_id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MasterArbitration::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi_ext.MasterArbitration)
  GOOGLE_DCHECK_NE(&from, this);
  const MasterArbitration* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MasterArbitration>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi_ext.MasterArbitration)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi_ext.MasterArbitration)
    MergeFrom(*source);
  }
}

void MasterArbitration::MergeFrom(const MasterArbitration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi_ext.MasterArbitration)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_role()) {
    mutable_role()->::gnmi_ext::Role::MergeFrom(from.role());
  }
  if (from.has_election_id()) {
    mutable_election_id()->::gnmi_ext::Uint128::MergeFrom(from.election_id());
  }
}

void MasterArbitration::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi_ext.MasterArbitration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MasterArbitration::CopyFrom(const MasterArbitration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi_ext.MasterArbitration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MasterArbitration::IsInitialized() const {
  return true;
}

void MasterArbitration::Swap(MasterArbitration* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MasterArbitration::InternalSwap(MasterArbitration* other) {
  using std::swap;
  swap(role_, other->role_);
  swap(election_id_, other->election_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MasterArbitration::GetMetadata() const {
  protobuf_gnmi_5fext_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_5fext_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Uint128::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Uint128::kHighFieldNumber;
const int Uint128::kLowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Uint128::Uint128()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_gnmi_5fext_2eproto::scc_info_Uint128.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi_ext.Uint128)
}
Uint128::Uint128(const Uint128& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&high_, &from.high_,
    static_cast<size_t>(reinterpret_cast<char*>(&low_) -
    reinterpret_cast<char*>(&high_)) + sizeof(low_));
  // @@protoc_insertion_point(copy_constructor:gnmi_ext.Uint128)
}

void Uint128::SharedCtor() {
  ::memset(&high_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&low_) -
      reinterpret_cast<char*>(&high_)) + sizeof(low_));
}

Uint128::~Uint128() {
  // @@protoc_insertion_point(destructor:gnmi_ext.Uint128)
  SharedDtor();
}

void Uint128::SharedDtor() {
}

void Uint128::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Uint128::descriptor() {
  ::protobuf_gnmi_5fext_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_5fext_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Uint128& Uint128::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_gnmi_5fext_2eproto::scc_info_Uint128.base);
  return *internal_default_instance();
}


void Uint128::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi_ext.Uint128)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&high_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&low_) -
      reinterpret_cast<char*>(&high_)) + sizeof(low_));
  _internal_metadata_.Clear();
}

bool Uint128::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi_ext.Uint128)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 high = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &high_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 low = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &low_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi_ext.Uint128)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi_ext.Uint128)
  return false;
#undef DO_
}

void Uint128::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi_ext.Uint128)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 high = 1;
  if (this->high() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->high(), output);
  }

  // uint64 low = 2;
  if (this->low() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->low(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gnmi_ext.Uint128)
}

::google::protobuf::uint8* Uint128::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gnmi_ext.Uint128)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 high = 1;
  if (this->high() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->high(), target);
  }

  // uint64 low = 2;
  if (this->low() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->low(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gnmi_ext.Uint128)
  return target;
}

size_t Uint128::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi_ext.Uint128)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 high = 1;
  if (this->high() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->high());
  }

  // uint64 low = 2;
  if (this->low() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->low());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Uint128::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi_ext.Uint128)
  GOOGLE_DCHECK_NE(&from, this);
  const Uint128* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Uint128>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi_ext.Uint128)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi_ext.Uint128)
    MergeFrom(*source);
  }
}

void Uint128::MergeFrom(const Uint128& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi_ext.Uint128)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.high() != 0) {
    set_high(from.high());
  }
  if (from.low() != 0) {
    set_low(from.low());
  }
}

void Uint128::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi_ext.Uint128)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Uint128::CopyFrom(const Uint128& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi_ext.Uint128)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Uint128::IsInitialized() const {
  return true;
}

void Uint128::Swap(Uint128* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Uint128::InternalSwap(Uint128* other) {
  using std::swap;
  swap(high_, other->high_);
  swap(low_, other->low_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Uint128::GetMetadata() const {
  protobuf_gnmi_5fext_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_5fext_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Role::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Role::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Role::Role()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_gnmi_5fext_2eproto::scc_info_Role.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi_ext.Role)
}
Role::Role(const Role& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  // @@protoc_insertion_point(copy_constructor:gnmi_ext.Role)
}

void Role::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Role::~Role() {
  // @@protoc_insertion_point(destructor:gnmi_ext.Role)
  SharedDtor();
}

void Role::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Role::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Role::descriptor() {
  ::protobuf_gnmi_5fext_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_5fext_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Role& Role::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_gnmi_5fext_2eproto::scc_info_Role.base);
  return *internal_default_instance();
}


void Role::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi_ext.Role)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Role::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi_ext.Role)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gnmi_ext.Role.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi_ext.Role)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi_ext.Role)
  return false;
#undef DO_
}

void Role::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi_ext.Role)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gnmi_ext.Role.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gnmi_ext.Role)
}

::google::protobuf::uint8* Role::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gnmi_ext.Role)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gnmi_ext.Role.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gnmi_ext.Role)
  return target;
}

size_t Role::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi_ext.Role)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Role::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi_ext.Role)
  GOOGLE_DCHECK_NE(&from, this);
  const Role* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Role>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi_ext.Role)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi_ext.Role)
    MergeFrom(*source);
  }
}

void Role::MergeFrom(const Role& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi_ext.Role)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void Role::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi_ext.Role)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Role::CopyFrom(const Role& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi_ext.Role)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Role::IsInitialized() const {
  return true;
}

void Role::Swap(Role* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Role::InternalSwap(Role* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Role::GetMetadata() const {
  protobuf_gnmi_5fext_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_5fext_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace gnmi_ext
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gnmi_ext::Extension* Arena::CreateMaybeMessage< ::gnmi_ext::Extension >(Arena* arena) {
  return Arena::CreateInternal< ::gnmi_ext::Extension >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gnmi_ext::RegisteredExtension* Arena::CreateMaybeMessage< ::gnmi_ext::RegisteredExtension >(Arena* arena) {
  return Arena::CreateInternal< ::gnmi_ext::RegisteredExtension >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gnmi_ext::MasterArbitration* Arena::CreateMaybeMessage< ::gnmi_ext::MasterArbitration >(Arena* arena) {
  return Arena::CreateInternal< ::gnmi_ext::MasterArbitration >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gnmi_ext::Uint128* Arena::CreateMaybeMessage< ::gnmi_ext::Uint128 >(Arena* arena) {
  return Arena::CreateInternal< ::gnmi_ext::Uint128 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gnmi_ext::Role* Arena::CreateMaybeMessage< ::gnmi_ext::Role >(Arena* arena) {
  return Arena::CreateInternal< ::gnmi_ext::Role >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
